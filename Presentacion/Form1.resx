<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCategorias.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAnpJREFUSEvtljtoFFEYRjckkIgGBB8RooFgIcRGCQQ0jaRSTKPYKIJpLCKKiKII
        klQSy6RSiZUWYuEDwSpCEBFLLdROUFQE8YEP8M16vtlvNrneO5tkURDigUP2fv8/e3fu3JlJ6Z+iXC43
        YCeuxUWO/x5M0oiH8QXmfMGL2OG2JNSH8ewM9rl9CkJNehmf4wAuwxbcgDfwFXa5PYKa0PGpCeUj/XX7
        FIQ6U0260lEVMi39OXyAjY4DyEW3hxHUsh/gYQUCfbGWd8BRBLVWfIf9jgLIxZwn1kYSSx0loX4VRzwM
        yI6uY+IuHQUtjpJQv4CjHgZkR9cx8ULU7t3oKAn1hzjoYQC5mNvEglC3jHZvg6MA8h34CdscBZCLuibu
        QN0y2r2tjjMYa9IPuN9RBDWxG7sLvILxxIKCrrVuGe1ebaTzqOXVmR5wWxLquhVnYsjtMRT1IOnHERzD
        QUwu73/mH+yF5Zja0euxyW21oXEN7vVwVtB/H4vY57ZiaNJL4zb+xMKHwnToW42i01EVspM44WExNO3E
        93gdJx3XhL5DeM/DAPIe/IaLHcVQXIBP8Ci2ox4e210uhJ5bOOxhALlW8BnuchSjg/ExNns85HHhm4va
        EvyO6xxFUDuDlzwMoZCf4TZHyvIVOOYogtoefIrJF4ygtgU/YnZCAYR6NkfXlCy/5kVvpuP4Fjc7CiBv
        xtP4GdsdVyDQ/ablinYxWb7Lxx0FuH4Qv+IprP5fxudVeBe1Ij2OKxDowDs4gb/f/Ll6WfzAWtdxE77E
        m6iHyVZ8g9cw3tGE+lX6tbPhhA9LQn0FTuJr1HcewcJr/0dhoibUfd3raN5TKv0CN37TWWfvC5gAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="btnMarcas.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAMFJREFUSEvtlsEJAjEQRQOCR0GvluHZBqxBsBJd8ChYgD1oL3bg0R68xPdlNqeY
        yzq74ObDY8lkMw/CHBLGlxjjES4900is3CD3gwdyxVa8sgtwj1wSVvFPQ98JnGFppbKY9RZyg/GNtR3V
        2Sns7LuHJ8xt21U8gwfc4QUb2/qEtd9V028BVzhZKUUu+NPhykUuCV3F9K1TXRZ3Df3qVKfIJaGrmL51
        qsvirqFfneoUuSQcXDzI87axQp8c7AJGkxDel56soIBOrlgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnArticulos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAmdJREFUSEvtls1rE0EYxqOi0SJiEJRSeykeol6EFnuQevJoqX+AWCilKpZ6klw0
        goIHD54stYeCEbyEXgqlBxE8+oFeRCsorahgQWuLivjZxt8zeXfNbjZVN4le8sCPnXnmnfdlZieTTdRC
        hUJhlzXrKwqts+daGAPppBush0i+Ci7Da+iAmzALx+Az9Flo9SLZFuiHAbgKb2EKluEObLW4Q/AFzoBi
        w2xzCf9EBO+FFzADP+Ad7IEk3ILb0GThij8MSzAP942PIOUtbGUReAK0govGInTYsMY3w0OYgDVmyz8O
        n6ALeuEbZEG5DlhYuRjcCNdBhXrgHLyHTgvxhbcdXsIVs5zoZ0ArVdFe887DE3AHMyDMnfAYHkAbnAUl
        2GchZWJsNyzAabPkHYHv4IpKtDfAc8iYVRRGN6jIV8jBOEh6T6O/4R7osGmnroG/0lLhaQdVo9UzdFhe
        wTREJf4blEOHK+WSh4Q/CcWDRkMHSRp1RhVSjmKqwrBZvvC03frtP1JnPWi1H6BWhe+CXlm72V7RG/AU
        WmQMgt6PbqOywniXoJKyFuYLz9vyYdAFsxqCRS1QPwetVldfVOEUtFdgk4X5wvMKa94bGIJgUYnOQdC1
        6CaYHVuleXj2gacBFxAWA/UorG0+BdrNf1fYE33dBY3CRUVNiKNwHtp6z8+g36ygwhPiKpyH9gWYg2az
        ggpPiKvSPDz1VaIbbL8bjFLphGrk5YE06H/8qA1Fy5tg3diyPHnQe82ZXVk2oVaFdffreyxpdmURNAL6
        gtTRrwbl0GH6dS+vJAJ3QNRnaRzSlrah/61E4idF85QOJeGwEQAAAABJRU5ErkJggg==
</value>
  </data>
</root>